import datetime
import json
import os

def generate_raiser(tree, isa, debug = True):
  timestamp = datetime.datetime.now()

  os.makedirs(f"Raiser", exist_ok = True)

  with \
    open(f'Raiser/{isa}Raiser.h', 'w') as fh, \
    open(f'Raiser/{isa}Raiser.cpp', 'w') as fcpp:
    fh.write(f"""
// This file was generated by {__file__} on {timestamp}
#ifndef {isa.upper()}_RAISER_H
#define {isa.upper()}_RAISER_H

#include <iostream>
#include <string>

#endif // {isa.upper()}_RAISER_H
""")

    fcpp.write(f"""
// This file was generated by {__file__} on {timestamp}
#include "{isa}Raiser.h"

namespace {isa} {{

}}
""")

if __name__ == "__main__":
  with open("./a32_encoding.json", "r") as f:
    encoding = json.load(f)
  generate_raiser(encoding, "A32")
  with open("./t32_encoding.json", "r") as f:
    encoding = json.load(f)
  generate_raiser(encoding, "T32")
